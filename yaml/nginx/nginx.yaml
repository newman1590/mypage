---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-reverse-proxy-config
  namespace: serengeti-util
data:
  nginx.conf: |
    user  nginx;
    worker_processes  5;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
        worker_connections  1024;
    }
    
    http {
        
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        proxy_buffer_size 100M;
        proxy_buffers 32 100M;
        client_max_body_size 100M;

        upstream backend {
            ip_hash;

            server 10.0.10.87:30906;
            server 10.0.10.5:30906;
            server 10.0.10.55:30906;
            server 10.0.10.16:30906;
            server 10.0.10.19:30906;
            server 10.0.10.43:30906;
        }

        upstream backend_dpg {
            ip_hash;

            server 10.0.10.87:31725;
            server 10.0.10.5:31725;
            server 10.0.10.55:31725;
            server 10.0.10.16:31725;
            server 10.0.10.19:31725;
            server 10.0.10.43:31725;
        }

        server {
            listen 80;
            return 301 https://$host$request_uri;
        }

        server {
            listen 443 ssl;

            location / {
                proxy_pass https://backend_dpg;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
            }

            ssl_certificate     /etc/nginx/ssl/tls_self.crt;
            ssl_certificate_key /etc/nginx/ssl/tls_self.key;
        }

        server {
            listen 443 ssl;
            server_name internal.hub.dpgtestbed.kr;

            location / {
                proxy_pass https://backend;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
            }

            ssl_certificate     /etc/nginx/ssl/tls_internal.crt;
            ssl_certificate_key /etc/nginx/ssl/tls_internal.key;
        }


        server {
            listen 443 ssl;
            server_name sso.hub.dpgtestbed.kr;

            location / {
                proxy_pass https://backend;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
            }

            ssl_certificate     /etc/nginx/ssl/tls_sso.crt;
            ssl_certificate_key /etc/nginx/ssl/tls_sso.key;
        }


        server {
            listen 443 ssl;
            server_name monitor.hub.dpgtestbed.kr;

            location / {
                proxy_pass https://backend;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
            }

            ssl_certificate     /etc/nginx/ssl/tls_monitor.crt;
            ssl_certificate_key /etc/nginx/ssl/tls_monitor.key;
        }

        server {
            listen 443 ssl;
            server_name dpgtestbed.kr;

            location / {
                proxy_pass https://backend;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
            }

            ssl_certificate     /etc/nginx/ssl/tls_seren.crt;
            ssl_certificate_key /etc/nginx/ssl/tls_seren.key;

            ssl_session_cache shared:SSL:1m;
            ssl_session_timeout 5m;

            ssl_ciphers HIGH:MEDIUM:!SSLv2:!PSK:!SRP:!ADH:!AECDH;
            ssl_prefer_server_ciphers on;
        }

        server {
            listen 443 ssl;
            server_name api.hub.dpgtestbed.kr;

            location / {
                proxy_pass https://backend;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_cache_bypass $http_upgrade;

                tcp_nodelay on;
                tcp_nopush off;
                client_body_timeout 12;
                keepalive_timeout 15;
                send_timeout 10;
                proxy_buffering off;
                #access_log off;
            }

            ssl_certificate     /etc/nginx/ssl/tls_api.crt;
            ssl_certificate_key /etc/nginx/ssl/tls_api.key;
        }

        server {
            listen 443 ssl;
            server_name guide.hub.dpgtestbed.kr;

            location / {
                proxy_pass https://backend;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
            }

            ssl_certificate     /etc/nginx/ssl/tls_guide.crt;
            ssl_certificate_key /etc/nginx/ssl/tls_guide.key;
        }

        server {
            listen 443 ssl;
            server_name dpg.hub.dpgtestbed.kr;

            location / {
                proxy_pass https://backend_dpg;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
            }

            ssl_certificate     /etc/nginx/ssl/tls_dpg.crt;
            ssl_certificate_key /etc/nginx/ssl/tls_dpg.key;
        }

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        gzip  on;

        include /etc/nginx/conf.d/*.conf;
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-reverse-proxy-deployment
  namespace: serengeti-util
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.19
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        - name: nginx-config-volume
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: nginx-ssl
          mountPath: /etc/nginx/ssl
      volumes:
      - name: nginx-config-volume
        configMap:
          name: nginx-reverse-proxy-config
      - name: nginx-ssl
        secret:
          secretName: serengeti-reverse-proxy-cert
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-reverse-proxy-service
  namespace: serengeti-util
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      name: http
      port: 80
      targetPort: 80
    - protocol: TCP
      name: https
      port: 443
      targetPort: 443
  type: LoadBalancer
